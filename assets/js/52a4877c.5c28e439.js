(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2693],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,y=d["".concat(l,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(y,c(c({ref:t},u),{},{components:n})):r.createElement(y,c({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var s=2;s<i;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8756:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return a},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),c={title:"Sequential Circuit - 2"},a=void 0,l={unversionedId:"lab-handouts/exp-6-t",id:"lab-handouts/exp-6-t",isDocsHomePage:!1,title:"Sequential Circuit - 2",description:"Wadhwani Electronics Lab, IIT Bombay",source:"@site/docs/lab-handouts/exp-6-t.mdx",sourceDirName:"lab-handouts",slug:"/lab-handouts/exp-6-t",permalink:"/docs/lab-handouts/exp-6-t",version:"current",frontMatter:{title:"Sequential Circuit - 2"},sidebar:"docs",previous:{title:"Sequential Circuit - 1",permalink:"/docs/lab-handouts/exp-5-w"}},s=[{value:"Handout",id:"handout",children:[]},{value:"Tracefile format",id:"tracefile-format",children:[]},{value:"Skeleton code",id:"skeleton-code",children:[]}],u={toc:s};function p(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Wadhwani Electronics Lab, IIT Bombay",(0,i.kt)("br",null),"\nTuesday 5th October, 2021",(0,i.kt)("br",null)),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"handout"},"Handout"),(0,i.kt)("div",{class:"pdf-container"},(0,i.kt)("iframe",{src:"https://drive.google.com/file/d/1Hn7b4hXZPhF0dN34as8B7USIgKTOyoWT/preview",class:"responsive-iframe"})),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"tracefile-format"},"Tracefile format"),(0,i.kt)("p",null,"{",(0,i.kt)("inlineCode",{parentName:"p"},"5bitinput < nospace > reset < nospace > clock < space > output < space > Maskbit"),"} ",(0,i.kt)("a",{href:"https://drive.google.com/drive/folders/1PgGFb7uKtsHK3-nyP3q0CDVhF1Orl7-X?usp=sharing"},"Tracefile \ud83d\udcc3")),(0,i.kt)("h2",{id:"skeleton-code"},"Skeleton code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vhdl"},"library ieee;\nuse ieee.std_logic_1164.all;\nuse ieee.numeric_std.all;\n\nentity cov_detect is\nport(inp:in std_logic_vector(4 downto 0);\n        reset,clock:in std_logic;\n        outp: out std_logic);\nend cov_detect;\n\narchitecture rch of cov_detect is\n\n---------------Define state type here-----------------------------\ntype state is (init,s1, -- Fill the code\n---------------Define signals of state type-----------------------\nsignal y_present,y_next: state:=init;\n\nbegin\nclock_proc:process(clock,reset)\nbegin\n    if(clock='1' and clock' event) then\n        if(reset='1') then\n            y_present<= -- Fill the code\n        else\n            -- Fill the code\n        end if;\n    end if;\n    \nend process;\n\nstate_transition_proc:process(inp,y_present)\nbegin\n    case y_present is\n        when init=>\n            if(unsigned(inp)=3) then    --c\n                y_next<=-- Fill the code\n\n")))}p.isMDXComponent=!0}}]);